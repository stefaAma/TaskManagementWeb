@*
    Main page where daily tasks are showed
*@
@using TaskManagement.ViewModels.DailyTasks
@model IEnumerable<DailyTask>

@{
    Report report = ViewData["report"] as Report;
    string date = ViewData["date"] as string;
}

<div class="container">
    <h1 class="mb-2">Manage your daily Tasks</h1>
    <input id="datepicker" onchange="dateChanged()" class="form-control mb-3" type="date" style="cursor: pointer;" value="@date" />
    @if (Model != null && Model.Count() > 0)
    {
        @*render daily tasks and report section*@
        <table class="table table-borderless table-hover text-center">
            <thead>
                <tr>
                    <th scope="col">
                        Completed
                    </th>
                    <th scope="col">
                        Name
                    </th>
                    <th scope="col">
                        Category
                    </th>
                    <th scope="col">
                        Duration
                    </th>
                    <th scope="col">
                        Effort
                    </th>
                    <th scope="col">
                        Description
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var dailyTask in Model)
                {
                    <tr>
                        <td class="position-relative" style="background-color: @dailyTask.Category.RgbaColor">
                            @if(dailyTask.IsCompleted)
                            {
                                <i class="bi bi-check2 position-absolute" style="top: 50%; left: 50%; transform: translate(-50%, -50%)"></i>
                            }
                            else
                            {
                                <i class="bi bi-x position-absolute" style="top: 50%; left: 50%; transform: translate(-50%, -50%)"></i>
                            }
                        </td>
                        <td style="background-color: @dailyTask.Category.RgbaColor">
                            @if(dailyTask.Name.Length > 15)
                            {
                                <p style="margin-top: 1rem;">@dailyTask.Name.Substring(0, 15)...</p>
                            }
                            else
                            {
                                <p style="margin-top: 1rem;">@dailyTask.Name</p>
                            }
                        </td>
                        <td style="background-color: @dailyTask.Category.RgbaColor">
                            <p style="margin-top: 1rem;">@dailyTask.Category.Name - @dailyTask.Category.Effort</p>
                        </td>
                        <td style="background-color: @dailyTask.Category.RgbaColor">
                            <p style="margin-top: 1rem;">@dailyTask.Duration</p>
                        </td>
                        <td style="background-color: @dailyTask.Category.RgbaColor">
                            <p style="margin-top: 1rem;">@dailyTask.Effort</p>
                        </td>
                        <td style="background-color: @dailyTask.Category.RgbaColor">
                            @if (dailyTask.Description?.Length > 15)
                            {
                                <p style="margin-top: 1rem;">@dailyTask.Description.Substring(0, 15)...</p>
                            }
                            else
                            {
                                <p style="margin-top: 1rem;">@dailyTask.Description</p>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="mt-2 d-flex align-items-center justify-content-center">
            <button class="btn btn-success">Create Daily Task</button>
        </div>


        <div class="d-flex flex-wrap justify-content-evenly">
            @{
                ViewData["report-title"] = "Total Effort";
                ViewData["report-type"] = "totalEffort";
                ViewData["RgbaColor"] = "rgba(129,140,248,0.5)";
            }
            <partial name="_ReportItem" />

            @{
                ViewData["report-type"] = "completionPercentage";
                ViewData["report-title"] = "Completion %";
                ViewData["RgbaColor"] = "rgba(74,222,128,0.5)";
            }
            <partial name="_ReportItem" />

            @{ViewData["report-type"] = "category";}
            @foreach(var category in report.Categories)
            {
                ViewData["report-title"] = category.Key + " %";
                ViewData["RgbaColor"] = Model.Where(dt => dt.Category.Name.Equals(category.Key))
                .Select(dt => new
                {
                    RgbaColor = dt.Category.RgbaColor
                })
                .FirstOrDefault()
                ?.RgbaColor;
                string categoryPercentage = category.Value.ToString();
                if (categoryPercentage.Length > 4)
                    categoryPercentage = categoryPercentage.Substring(0, 4);
                ViewData["category-percentage"] = categoryPercentage;
                <partial name="_ReportItem" />
            }
        </div>

    }
    else
    {
        <div class="d-flex align-items-center justify-content-start">
            <p class="m-0">There aren't any tasks planned for today, please create them by pressing</p>
            <button class="btn btn-success ms-2">Create Daily Task</button>
        </div>
    }
</div>